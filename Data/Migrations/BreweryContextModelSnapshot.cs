// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(BreweryContext))]
    partial class BreweryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Models.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserSectionId")
                        .HasColumnType("int");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("UserSectionId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("d818a056-1d33-4276-bc80-c8dcf128fe20"),
                            Email = "Ben@SWBC.com",
                            FirstName = "Ben",
                            LastName = "Sztucki",
                            UserSectionId = 4,
                            UserTypeId = 2
                        },
                        new
                        {
                            UserId = new Guid("630958ef-30c8-4c43-a822-f5b3b5192bd1"),
                            Email = "Luke@SWBC.com",
                            FirstName = "Luke",
                            LastName = "Dallimore",
                            UserSectionId = 3,
                            UserTypeId = 2
                        },
                        new
                        {
                            UserId = new Guid("ff96657b-00c1-4c68-a6d6-4bd213777f53"),
                            Email = "Mike@SWBC.com",
                            FirstName = "Mike",
                            LastName = "Prosser",
                            UserSectionId = 2,
                            UserTypeId = 3
                        },
                        new
                        {
                            UserId = new Guid("42481486-17f2-4cd3-bda2-04d3b46c8e0f"),
                            Email = "Maddie@SWBC.com",
                            FirstName = "Maddie",
                            LastName = "Williams",
                            UserSectionId = 3,
                            UserTypeId = 1
                        },
                        new
                        {
                            UserId = new Guid("ef258c81-b08e-4b73-9173-956db34a6e7b"),
                            Email = "Sarah@SWBC.com",
                            FirstName = "Sarah",
                            LastName = "Williams",
                            UserSectionId = 4,
                            UserTypeId = 2
                        },
                        new
                        {
                            UserId = new Guid("39b79056-d79a-4672-a068-104cc3d77116"),
                            Email = "Jamie@SWBC.com",
                            FirstName = "Jamie",
                            LastName = "Buckley",
                            UserSectionId = 5,
                            UserTypeId = 2
                        },
                        new
                        {
                            UserId = new Guid("bf445a42-b936-44d4-90b4-00cc4a9189b7"),
                            Email = "Henry@SWBC.com",
                            FirstName = "Henry",
                            LastName = "Dallimore",
                            UserSectionId = 1,
                            UserTypeId = 1
                        },
                        new
                        {
                            UserId = new Guid("120d5ff6-1d0a-4915-88b3-450cdaf9fb6d"),
                            Email = "Ellie@SWBC.com",
                            FirstName = "Ellie",
                            LastName = "Dallimore",
                            UserSectionId = 4,
                            UserTypeId = 1
                        },
                        new
                        {
                            UserId = new Guid("6325b363-02c5-4d36-bb95-a232b226e95f"),
                            Email = "Alan@SWBC.com",
                            FirstName = "Alan",
                            LastName = "Grant",
                            UserSectionId = 1,
                            UserTypeId = 2
                        },
                        new
                        {
                            UserId = new Guid("822bfbc5-f936-4da2-93af-d0caf7efa97d"),
                            Email = "Ian@SWBC.com",
                            FirstName = "Ian",
                            LastName = "Malcome",
                            UserSectionId = 2,
                            UserTypeId = 1
                        });
                });

            modelBuilder.Entity("Models.Entities.UserSection", b =>
                {
                    b.Property<int>("UserSectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserSectionId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserSectionId");

                    b.ToTable("UserSection");

                    b.HasData(
                        new
                        {
                            UserSectionId = 1,
                            Name = "Canning"
                        },
                        new
                        {
                            UserSectionId = 2,
                            Name = "Brewing"
                        },
                        new
                        {
                            UserSectionId = 3,
                            Name = "Labs"
                        },
                        new
                        {
                            UserSectionId = 4,
                            Name = "HR"
                        },
                        new
                        {
                            UserSectionId = 5,
                            Name = "Sales"
                        });
                });

            modelBuilder.Entity("Models.Entities.UserType", b =>
                {
                    b.Property<int>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserTypeId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserTypeId");

                    b.ToTable("UserType");

                    b.HasData(
                        new
                        {
                            UserTypeId = 1,
                            Name = "Assistant"
                        },
                        new
                        {
                            UserTypeId = 2,
                            Name = "Manager"
                        },
                        new
                        {
                            UserTypeId = 3,
                            Name = "Engineer"
                        });
                });

            modelBuilder.Entity("Models.Entities.User", b =>
                {
                    b.HasOne("Models.Entities.UserSection", "UserSection")
                        .WithMany("Users")
                        .HasForeignKey("UserSectionId");

                    b.HasOne("Models.Entities.UserType", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserSection");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("Models.Entities.UserSection", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Models.Entities.UserType", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
